name: Continuous Integration

on:
  pull_request:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  test-action:
    name: GitHub Actions Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
      - name: Checkout rust_http_proxy
        uses: actions/checkout@v4
        with:
          repository: arloor/rust_http_proxy
          path: rust_http_proxy

      - name: Test Local Action
        id: test-action
        uses: ./
        with:
          path: rust_http_proxy
          use_musl: false
          extra_deps: cmake zlib1g-dev libelf-dev clang pkg-config make
          after_install: |
            apt-get remove -y gcc
            apt-get install -y gcc-10
            gcc -v
            # find / -name libelf.a
            # find / -name libbpf.a
            # find / -name libz.a
            export LIBBPF_SYS_LIBRARY_PATH=/usr/lib:/usr/lib64:/usr/lib/x86_64-linux-gnu
            echo -e "\e[31mLIBBPF_SYS_LIBRARY_PATH=$LIBBPF_SYS_LIBRARY_PATH\e[0m"
          args: -p rust_http_proxy --no-default-features --features aws_lc_rs,bpf_static
          apt_mirror: mirrors.mit.edu
          debug: false

      - name: Print Output
        id: output
        run: |
          echo "release_dir: ${{ steps.test-action.outputs.release_dir }}"
          ls -lh ${{ steps.test-action.outputs.release_dir }}
      - name: gihub release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          if $(gh release delete latest -y --cleanup-tag); 
            then echo "delete old release"; 
            else echo "no old release";
          fi
          git config --local user.email "admin@arloor.com"
          git config --local user.name "arloor"
          gh release create latest -n "latest" --latest -t latest
