name: Continuous Integration

on:
  pull_request:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  test-action:
    name: GitHub Actions Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
      - name: Checkout rust_http_proxy
        uses: actions/checkout@v4
        with:
          repository: arloor/rust_http_proxy
          path: rust_http_proxy

      - name: Test Local Action
        id: test-action
        uses: ./
        with:
          path: rust_http_proxy
          args: --features jemalloc

      - name: Print Output
        id: output
        run: |
          echo "release_dir: ${{ steps.test-action.outputs.release_dir }}"
          ls -lh ${{ steps.test-action.outputs.release_dir }}
      - name: gihub release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          if $(gh release delete latest -y --cleanup-tag); 
            then echo "delete old release"; 
            else echo "no old release";
          fi
          git config --local user.email "admin@arloor.com"
          git config --local user.name "arloor"
          gh release create latest -n "latest" --latest -t latest
